There are two database files provided in this project.
These databases files were generated using SQLite.

The file "cs157a_project_NoFK.db" does not have foreign key constraints added.
The file "cs157a_project.db" does have foreign key constraints added.


/////////////////////////////////////////////////////////////////////////////////////////////////////


INSERT INTO JOB_CLASS VALUES (1, "Fighter", "Physical attacker");
INSERT INTO JOB_CLASS VALUES (2, "Wizard", "Spellcaster");
INSERT INTO JOB_CLASS VALUES (3, "Cleric", "Healer and support");

INSERT INTO EQUIPMENT VALUES (1, "Sword", "Weapon", 50, "STR + 3, DEX + 3");
INSERT INTO EQUIPMENT VALUES (2, "Staff", "Weapon", 30, "INT + 3");
INSERT INTO EQUIPMENT VALUES (3, "Mace", "Weapon", 30, "STR + 5");

INSERT INTO ITEM VALUES (1, "Potion", "Consumable", 10, "Recover 50 HP");
INSERT INTO ITEM VALUES (2, "Dungeon Key", "Key Item", 0, "Opens locked doors");
INSERT INTO ITEM VALUES (3, "Elixir", "Consumable", 100, "Recover 300 HP");

INSERT INTO INVENTORY VALUES (1, 2, 4);
INSERT INTO INVENTORY VALUES (2, 1, 1);
INSERT INTO INVENTORY VALUES (3, 3, 5);
INSERT INTO INVENTORY VALUES (50, 1, 4);
INSERT INTO INVENTORY VALUES (51, 1, 2);
INSERT INTO INVENTORY VALUES (52, 1, 1);

INSERT INTO SKILL VALUES (1, "Double Attack", "Hit the target twice", 2);
INSERT INTO SKILL VALUES (2, "Fireball", "Shoot a ball of fire", 5);
INSERT INTO SKILL VALUES (3, "Heal", "Target recovers 50 HP", 2);
INSERT INTO SKILL VALUES (4, "Lock Picking", "Opens locked doors and treasure chests", 1);

INSERT INTO SKILL_POOL VALUES (1, 1, 2, 3, 4);
INSERT INTO SKILL_POOL VALUES (2, 1, 3, NULL, NULL);
INSERT INTO SKILL_POOL VALUES (3, 2, 3, NULL, NULL);
INSERT INTO SKILL_POOL VALUES (50, NULL, NULL, NULL, NULL);
INSERT INTO SKILL_POOL VALUES (51, 1, NULL, NULL, NULL);
INSERT INTO SKILL_POOL VALUES (52, 1, 2, 3, NULL);

INSERT INTO STATUS VALUES (1, 8, 8, 5, 4, 2, 15, 5);
INSERT INTO STATUS VALUES (2, 10, 5, 6, 5, 1, 20, 3);
INSERT INTO STATUS VALUES (3, 3, 3, 3, 5, 12, 11, 10);
INSERT INTO STATUS VALUES (50, 3, 2, 5, 3, 1, 5, 0);
INSERT INTO STATUS VALUES (51, 8, 10, 8, 5, 1, 12, 1);
INSERT INTO STATUS VALUES (52, 22, 19, 9, 4, 22, 30, 5);

INSERT INTO ENEMY VALUES (1, "Goblin", 50, 50, 50);
INSERT INTO ENEMY VALUES (2, "Wight", 51, 51, 51);
INSERT INTO ENEMY VALUES (3, "Demon", 52, 52, 52);

INSERT INTO ACTOR VALUES (1, "Dummy", 1, 1, 1, 1, 1);
INSERT INTO ACTOR VALUES (2, "Adam", 1, 2, 2, 2, 2);
INSERT INTO ACTOR VALUES (3, "Ben", 2, 3, 3, 3, 3);


/* The following cannot be used for SQLite */
ALTER TABLE ACTOR
ADD CONSTRAINT FK_ACTOR_JOB
FOREIGN KEY (ACTOR_CLASS_ID) REFERENCES JOB_CLASS(JOB_ID);

ALTER TABLE ACTOR
ADD CONSTRAINT FK_ACTOR_INVENTORY
FOREIGN KEY(ACTOR_INVENTORY) REFERENCES INVENTORY(INVENTORY_ID);

ALTER TABLE ACTOR
ADD CONSTRAINT FK_ACTOR_STAT
FOREIGN KEY(ACTOR_STATUS) REFERENCES STATUS(COMBATANT);

ALTER TABLE ACTOR
ADD CONSTRAINT FK_ACTOR_JOB_CLASS
FOREIGN KEY(ACTOR_CLASS_ID) REFERENCES JOB_CLASS(JOB_ID);

ALTER TABLE ACTOR
ADD CONSTRAINT FK_ACTOR_SKILLS
FOREIGN KEY(ACTOR_SKILL_POOL) REFERENCES SKILL_POOL(POOL_ID);

ALTER TABLE ACTOR
ADD CONSTRAINT FK_ACTOR_INVENTORY
FOREIGN KEY(ACTOR_EQUIPMENT) REFERENCES EQUIPMENT(EQUIPMENT_ID);

ALTER TABLE ENEMY
ADD CONSTRAINT FK_ENEMY_INVENTORY
FOREIGN KEY(ENEMY_INVENTORY) REFERENCES INVENTORY(INVENTORY_ID);

ALTER TABLE ENEMY
ADD CONSTRAINT FK_ENEMY_SKILLS
FOREIGN KEY(ENEMY_SKILL_POOL) REFERENCES SKILL_POOL(POOL_ID);

ALTER TABLE ENEMY
ADD CONSTRAINT FK_ENEMY_STAT
FOREIGN KEY(ENEMY_STATUS_ID) REFERENCES STATUS(COMBATANT);

ALTER TABLE INVENTORY
ADD CONSTRAINT FK_INVENTORY_ITEM
FOREIGN KEY(ITEM_ID) REFERENCES ITEM(ITEM_ID);

ALTER TABLE SKILL_POOL
ADD CONSTRAINT FK_SKILL_ONE
FOREIGN KEY(SKILL_A) REFERENCES SKILL(SKILL_ID);

ALTER TABLE SKILL_POOL
ADD CONSTRAINT FK_SKILL_TWO
FOREIGN KEY(SKILL_B) REFERENCES SKILL(SKILL_ID);

ALTER TABLE SKILL_POOL
ADD CONSTRAINT FK_SKILL_THREE
FOREIGN KEY(SKILL_C) REFERENCES SKILL(SKILL_ID);

ALTER TABLE SKILL_POOL
ADD CONSTRAINT FK_SKILL_FOUR
FOREIGN KEY(SKILL_D) REFERENCES SKILL(SKILL_ID);


/* The following are query commands used for testing */

SELECT * FROM ACTOR;
SELECT ACTOR_NAME FROM ACTOR WHERE (ACTOR_NAME IS NOT "Dummy") ORDER BY ACTOR_NAME DESC;

SELECT ACTOR_NAME, HIT_POINTS, SKILL_POINTS FROM ACTOR LEFT JOIN STATUS ON ACTOR.ACTOR_STATUS = STATUS.COMBATANT;

--test 4 (demo): new class, new equipment, make a new actor, show it

INSERT INTO JOB_CLASS VALUES (4, "Ranger", "High movement");
INSERT INTO EQUIPMENT VALUES (4, "Bow and Arrows", "Weapon", 30, "DEX + 5");
INSERT INTO INVENTORY VALUES (4, 2, 1);
INSERT INTO SKILL VALUES (5, "Aim", "Increases accuracy", 0);
INSERT INTO SKILL_POOL VALUES (5, 1, 5, NULL, NULL);
INSERT INTO STATUS VALUES (5, 5, 5, 9, 9, 4, 14, 7);
INSERT INTO ACTOR VALUES (4, "Ike", 4, 4, 5, 5, 4);
SELECT ACTOR_NAME, STRENGTH, VITALITY, DEXTERITY, AGILITY, INTELLIGENCE FROM ACTOR LEFT JOIN STATUS
	ON ACTOR.ACTOR_STATUS = STATUS.COMBATANT;

